
NAME=zorbash-game
OBJDIR=.o

GAME_SOURCE := $(wildcard *.cpp) $(wildcard *.S)
GAME_OBJECTS :=\
	$(addprefix $(OBJDIR)/,$(addsuffix .o,$(basename $(GAME_SOURCE))))

#
# compile
# Nice but creates too many diffs with clang versions
# @$(shell grep -q goblin $< && echo clang-format -i $<)
#
$(OBJDIR)/%.o: %.cpp
	@echo $(CC) $(EXTRA_CFLAGS) $(CFLAGS) -c -o $@ $<
	@$(CC) $(EXTRA_CFLAGS) $(CFLAGS) -c -o $@ $<

$(OBJDIR)/%.o: %.S
	@echo $(CC) -c -o $@ $<
	@$(CC) -c -o $@ $<

#
# link
#
TARGET_GAME=$(NAME)$(EXE)
$(TARGET_GAME): $(GAME_OBJECTS)
	/bin/rm -f ../$(TARGET_GAME)
	$(CC) $(LDFLAGS) $(GAME_OBJECTS) $(LDLIBS) -o $(TARGET_GAME)
	cp $(TARGET_GAME) ..

#
# To force clean and avoid "up to date" warning.
#
.PHONY: clean
.PHONY: clobber

clean:
	rm -f ../$(TARGET_GAME) ../stdout.txt ../stderr.txt
	rm -f $(TARGET_GAME) stdout.txt stderr.txt
	rm -rf $(OBJDIR)
	mkdir -p $(OBJDIR)

clobber: clean
	rm -rf $(OBJDIR)
	mkdir -p $(OBJDIR)

all: $(TARGET_GAME)
